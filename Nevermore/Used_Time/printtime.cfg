#####################################################################
# 	Macro
#####################################################################
## This macro stores the variables
## must be added to PRINT_END - CANCEL_PRINT Macro 
## works only with the use of virtual sd card!
[gcode_macro _ADD_PRINT_TIME]
description: Helper: Store print time values in variables
gcode:
  {% set time = printer.print_stats.total_duration %}
  {% set filament = printer.print_stats.filament_used|float %}
  {% set filtertime = time if printer['gcode_macro PRINT_START'].var.filter else 0 %}
  # update saved dictornary or initiate if not exist
  {% if not printer.save_variables.variables.print_stats %}
    {% set print_stats = {'time': {'total': time, 'service': time, 'filter': filtertime}, 'filament': filament}%}
  {% else %}
    {% set print_stats = printer.save_variables.variables.print_stats %}
    {% set _dummy = print_stats.time.update({'total':(print_stats.time.total + time)|int}) %}
    {% set _dummy = print_stats.time.update({'service':(print_stats.time.service + time)|int}) %}
    {% set _dummy = print_stats.time.update({'filter':(print_stats.time.filter + filtertime)|int}) %}
    {% set _dummy = print_stats.update({'filament':(print_stats.filament + filament)|float}) %}    
  {% endif %}  
  SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"

[gcode_macro _DISPLAY_PRINT_TIME]
description: Helper: Print actual stored print time
gcode:
  {% set totaltime = params.SECONDS|int if 'SECONDS' in params|upper  
                else printer.save_variables.variables.print_stats.time.total %}
  {% set prefix = params.PREFIX|default('Total') %}
  {% set h,m,s = (totaltime / 3600)|int, ((totaltime / 60) % 60)|int, (totaltime % 60)|int %}
  {action_respond_info("Print time %s %d:%02d:%02d" % (prefix,h,m,s))}
  M117 {prefix} {h}:{'%02d' % m}:{'%02d' % s}
  #UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

## used at PRINT_END and CANCEL_PRINT
[gcode_macro _SD_PRINT_STATS]
description: Helper: Print statistic of last print
gcode:
  {% set PT = printer.print_stats.print_duration %}
  {% set Ph,Pm,Ps = (PT / 3600)|int, ((PT / 60) % 60)|int, (PT % 60)|int %}
  {% set TT = printer.print_stats.total_duration %}
  {% set Th,Tm,Ts = (TT / 3600)|int, ((TT / 60) % 60)|int, (TT % 60)|int %}
  {% set Fil = printer.print_stats.filament_used|float / 1000.0 %}
  {action_respond_info("Statistic of last Print (%s):
                        Name: %s
                        Filament: %.4fm
                        Print Time: %d:%02d:%02d
                        Total Time: %d:%02d:%02d" %
  (params.R, printer.print_stats.filename, Fil, Ph, Pm, Ps, Th, Tm, Ts))}

 ## used at PRINT_END and CANCEL_PRINT
[gcode_macro _SD_PRINTER_STATS]
description: Helper: Print statistic of printer
gcode:
  {% set ST = printer.save_variables.variables.print_stats.time.service %}
  {% set Sh,Sm,Ss = (ST / 3600)|int, ((ST / 60) % 60)|int, (ST % 60)|int %}
  {% set TT = printer.save_variables.variables.print_stats.time.total %}
  {% set Th,Tm,Ts = (TT / 3600)|int, ((TT / 60) % 60)|int, (TT % 60)|int %}
  {% set FT = printer.save_variables.variables.print_stats.time.filter %}
  {% set Fh,Fm,Fs = (FT / 3600)|int, ((FT / 60) % 60)|int, (FT % 60)|int %}
  {% set Fil = printer.save_variables.variables.print_stats.filament|float / 1000.0 %}
  {action_respond_info("Printer Statistics:
                        Total Print Time: %d:%02d:%02d
                        Total Filament used: %.4fm
                        Filter use time: %d:%02d:%02d
                        Time since last Service: %d:%02d:%02d" %
  (Th, Tm, Ts, Fil, Fh, Fm, Fs, Sh, Sm, Ss))}
  _CHECK_FILTER

[gcode_macro _CHECK_FILTER]
description: Helper: Print filter exchange warning
gcode:
  {% if printer['gcode_macro _USER_VARIABLE'].hw.filter.ena and 
        printer.save_variables.variables.print_stats %}
    {% set Fh = (printer.save_variables.variables.print_stats.time.filter / 3600)|int %}
    {% if Fh >= printer['gcode_macro _USER_VARIABLE'].peripheral.filter.warning %}
      M117 Change Filter (Print time reached)!
      {action_respond_info("Change Filter material at Micro! (Print time reached)")}
    {% else %}
      M117  Filter ok (Print time ok)!
      {action_respond_info("Filter material is OK (Print time ok)")}
    {% endif %}
  {% endif %}  
  
[gcode_macro RST_FILTER]
description: Reset Nevermore interval time
gcode: 
  {% if printer.save_variables.variables.print_stats %}
    {% set print_stats = printer.save_variables.variables.print_stats %}
    {% set _dummy = print_stats.time.update({'filter': 0}) %}
    SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
    ResetFilterDate
    {action_respond_info("Flter used time reseted to zero")}
  {% endif %}
  
[gcode_macro RST_SERVICE]
description: Reset Service interval time
gcode:
  {% if printer.save_variables.variables.print_stats %}
    {% set print_stats = printer.save_variables.variables.print_stats %}
    {% set _dummy = print_stats.time.update({'service': 0}) %}
    SAVE_VARIABLE VARIABLE=print_stats VALUE="{print_stats}"
    ResetFilterDate
    {action_respond_info("Time since last service reseted to zero")}
  {% endif %}

#################################################################################
# Aktivekohle Check Ã¼ber Nutzungszeit (NICHT Druckzeit)
#################################################################################

[gcode_shell_command _SetDate]
command: bash /home/pi/klipper_config/script/reset_filter_time.sh
timeout: 30
verbose: True

[gcode_shell_command _GetDate]
command: bash /home/pi/klipper_config/script/get_filter_time.sh
timeout: 30
verbose: True

# Macro zum setzen des Datums des Tauschs der Aktivekohle im Nevermor Filter
[gcode_macro ResetFilterDate]
gcode:
   RUN_SHELL_COMMAND CMD=_SetDate

# Auswertung des Status ob die Aktivekohle getauscht werden muss nach Tagen wo die Kohle im Drucker ist
[gcode_macro get_FilterStatusDate]
gcode:
   {% set days = printer['gcode_macro _USER_VARIABLE'].peripheral.filter.days %}
   RUN_SHELL_COMMAND CMD=_GetDate  PARAMS={days}

# Anzeige der Kompletten Auswertung der Nuztungszeit der Aktivkohle (Druckzeit und Tage)
[gcode_macro get_FilterStatusAll]
gcode:
   {% set days = printer['gcode_macro _USER_VARIABLE'].peripheral.filter.days %}
   RUN_SHELL_COMMAND CMD=_GetDate  PARAMS={days}
  _SD_PRINTER_STATS


